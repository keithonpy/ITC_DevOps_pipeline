pipeline {
    agent any
    
    /*triggers {
        pollSCM('* * * * *') // Polls the SCM (GitHub repository) every minute for changes
    }*/
    
    stages {
        stage('Build') {
            steps {
                // Checkout the source code from the "test_pipeline" branch of the GitHub repository for the build
                git branch: 'Development', url: 'https://github.com/Asadkardame/BD_Colab.git'
                
                // Execute Python scripts with Spark
                sh 'spark-submit main.py'
               
            }
        }
        stage('Test') {
            steps {
                // Checkout the source code from the GitHub repository for testing
               git branch: 'QA', url: 'https://github.com/Asadkardame/BD_Colab.git'

                
                
                // Execute tests for Python scripts
                sh 'spark-submit main.py'
            }
        }
        stage('Deploy') {
            steps {
                // Checkout the source code from the GitHub repository for deployment
               git branch: 'main', url: 'https://github.com/Asadkardame/BD_Colab.git'
                
                // Execute deployment scripts or commands
               sh 'spark-submit main.py'
            }
        } 
    }
    
    post {
        always {
            /*// Cleanup steps, such as archiving artifacts
            archiveArtifacts artifacts: 'target/*.jar', fingerprint: true */
            // Send notification emails
            emailext attachLog: true, body: 'The Jenkins pipeline has completed.', subject: 'Pipeline Status', to: 'keithtang0901@gmail.com'
        }
        success {
            // Actions to take when the pipeline succeeds
            echo 'Pipeline succeeded! Congratulations!'
        }
        failure {
            // Actions to take when the pipeline fails
            echo 'Pipeline failed! Check the logs for details.'
        }
    }
}
